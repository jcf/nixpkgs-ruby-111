#+title: nixpkgs-ruby + Bundix
#+startup: content

https://github.com/bobvanderlinden/nixpkgs-ruby/issues/111

* Contents                                                              :TOC:
- [[#setup][Setup]]
  - [[#install-ruby][Install Ruby]]
  - [[#update-gems][Update gems]]
- [[#rails-fails][Rails fails]]
  - [[#where-is-rails][Where is Rails?]]
  - [[#invoke-rails-cli][Invoke Rails CLI]]

* Setup
** Install Ruby
Install Ruby and our Bundix wrapper.

#+begin_src sh :eval never
direnv reload
#+end_src

** Update gems
Update gems, blowing away lock files, and make sure binstubs are available.

#+begin_src sh :eval never
nixpkgs-ruby-111-gems-update && direnv reload
#+end_src

* Rails fails
** Where is Rails?
To be sure we're not using an ancient version of Rails included in popular
BSD-derivatives.

#+begin_src sh :exports both
type rails
#+end_src

#+results:
: rails is /nix/store/n0ww374rh8xgq0p1hxbasxdfr389j2ni-devenv-profile/bin/rails

** Invoke Rails CLI
#+begin_src sh :results output verbatim :exports both
rails --help 2>&1
#+end_src

#+results:
#+begin_example
Usage:
  rails COMMAND [options]

You must specify a command:

  new          Create a new Rails application. "rails new my_app" creates a
               new application called MyApp in "./my_app"
  plugin new   Create a new Rails railtie or engine

All commands can be run with -h (or --help) for more information.

Inside a Rails application directory, some common commands are:

  console      Start the Rails console
  server       Start the Rails server
  test         Run tests except system tests
#+end_example
